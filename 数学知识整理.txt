基本几何知识：
@ 1、叉乘    
        a=(1,2,3),b=(4,5,6)           -->  (1,2,3)×(4,5,6)=(12-15,12-6,5-8)=（-3,6,-3）
        a=(X1,Y1,Z1),b=(X2,Y2,Z2),    -->  a×b=（Y1*Z2-Y2*Z1,Z1*X2-Z2*X1,X1*Y2-X2*Y1）


        eg1、判断a转向b 最小转向应该向左还是向右。A(1,0,1)  B(1,0,0)   crossY=Z1*X2-Z2*X1 =1   
                                                crossY==0 两个角度=0||180  
                                                crossY>0，则两个角度<180 绕Y顺时针旋转   
                                                crossY<0  则两个角度>180 绕Y逆时针旋转  

@2、点乘
        a=(x1,x2,x3)  b=(y1,y2,y3)    a.b=(x1*y1+x2*y2+x3*y3) =|a||b|cosδ
        eg1、判断a、b之间夹角 。
                    a·b>0    方向基本相同，夹角在0°到90°之间
                    a·b=0    正交，相互垂直     
                    a·b<0    方向基本相反，夹角在90°到180°之间
        eg2、a和b间的夹角θ                    
                θ = acccos(a.b/(|a||b|))

@3、Vector3 函数
        区别：
            MoveTowards(Vector3 current, Vector3 target, float maxDistanceDelta)
                当前值current移向目标target,maxDistanceDelta就是每次移动的最大长度,返回值是当current值加上maxDistanceDelta的值，如果这个值超过了target，返回的就是target的值
            Lerp(Vector3 a, Vector3 b, float t))
                t=0， 返回值是a，当t=1，返回值是b。同理，t=0.1时是a到b的10%。t就代表了a到b的百分比
            Slerp(Vector3 a, Vector3 b, float t)
                球形插值,这里球形插值与线性插值不同的地方在于，它将Vectors视为方向而不再是点。返回的{[向量方向]}，它的角度是根据a和b的角度插值，而它的长度是根据a和b的长度插值。

@4、Quaternion  四元素


